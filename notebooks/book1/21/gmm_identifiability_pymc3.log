An error occurred while executing the following cell:
------------------
# Gaussian mixture model suign PyMC3
# Based on https://github.com/aloctavodia/BAP/blob/master/code/Chp6/06_mixture_models.ipynb


try:
    import pymc3 as pm
except ModuleNotFoundError:
    %pip install pymc3
    import pymc3 as pm
import numpy as np
import scipy.stats as stats

try:
    import pandas as pd
except ModuleNotFoundError:
    %pip install pandas
    import pandas as pd
try:
    import theano.tensor as tt
except ModuleNotFoundError:
    %pip install theano
    import theano.tensor as tt
import matplotlib.pyplot as plt

try:
    import arviz as az
except ModuleNotFoundError:
    %pip install arviz
    import arviz as az
try:
    import probml_utils as pml
except ModuleNotFoundError:
    %pip install git+https://github.com/probml/probml-utils.git
    import probml_utils as pml

np.random.seed(42)


# url = 'https://github.com/aloctavodia/BAP/tree/master/code/data/chemical_shifts_theo_exp.csv?raw=true'
# There is some error reading the abvoe file
# Error tokenizing data. C error: Expected 1 fields in line 71, saw 2
# So we make a copy here
url = "https://github.com/probml/pyprobml/blob/master/data/chemical_shifts_theo_exp.csv?raw=true"
df = pd.read_csv(url)
obs = df["exp"]

az.plot_kde(obs)
plt.hist(obs, density=True, bins=30, alpha=0.3)
plt.yticks([])
pml.savefig("gmm_pymc3_data.pdf", dpi=300)

# Illustrate unidentifiability

clusters = 2
with pm.Model() as model_mg:
    p = pm.Dirichlet("p", a=np.ones(clusters))
    means = pm.Normal("means", mu=obs.mean(), sd=10, shape=clusters)
    sd = pm.HalfNormal("sd", sd=10)
    y = pm.NormalMixture("y", w=p, mu=means, sd=sd, observed=obs)
    trace_mg = pm.sample(random_seed=123, cores=1, chains=2)

varnames = ["means", "p"]
print(az.summary(trace_mg, varnames))

az.plot_trace(trace_mg, varnames)
pml.savefig("gmm_pymc3_label_switching.pdf", dpi=300)

# Add constraint that mu[0] < mu[1] using a potential (penalty) function

clusters = 2
with pm.Model() as model_mgp:
    p = pm.Dirichlet("p", a=np.ones(clusters))
    means = pm.Normal("means", mu=np.array([0.9, 1]) * obs.mean(), sd=10, shape=clusters)
    sd = pm.HalfNormal("sd", sd=10)
    order_means = pm.Potential("order_means", tt.switch(means[1] - means[0] < 0, -np.inf, 0))
    y = pm.NormalMixture("y", w=p, mu=means, sd=sd, observed=obs)
    trace_mgp = pm.sample(1000, random_seed=123, cores=1, chains=2)

varnames = ["means", "p"]
print(az.summary(trace_mgp, varnames))
az.plot_trace(trace_mgp, varnames)
pml.savefig("gmm_pymc3_constrained.pdf", dpi=300)

plt.show()
------------------

---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
/tmp/ipykernel_2224/1818234667.py in <module>
      5 try:
----> 6     import pymc3 as pm
      7 except ModuleNotFoundError:

ModuleNotFoundError: No module named 'pymc3'

During handling of the above exception, another exception occurred:

ImportError                               Traceback (most recent call last)
/tmp/ipykernel_2224/1818234667.py in <module>
      7 except ModuleNotFoundError:
      8     get_ipython().run_line_magic('pip', 'install pymc3')
----> 9     import pymc3 as pm
     10 import numpy as np
     11 import scipy.stats as stats

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/__init__.py in <module>
    113 _hotfix_theano_printing()
    114 
--> 115 from pymc3 import gp, ode, sampling
    116 from pymc3.backends import load_trace, save_trace
    117 from pymc3.backends.tracetab import *

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/gp/__init__.py in <module>
     14 
     15 from pymc3.gp import cov, mean, util
---> 16 from pymc3.gp.gp import TP, Latent, LatentKron, Marginal, MarginalKron, MarginalSparse

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/gp/gp.py in <module>
     23 import pymc3 as pm
     24 
---> 25 from pymc3.distributions import draw_values
     26 from pymc3.gp.cov import Constant, Covariance
     27 from pymc3.gp.mean import Zero

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/distributions/__init__.py in <module>
     13 #   limitations under the License.
     14 
---> 15 from pymc3.distributions import shape_utils, timeseries, transforms
     16 from pymc3.distributions.bart import BART
     17 from pymc3.distributions.bound import Bound

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/distributions/timeseries.py in <module>
     19 from theano import scan
     20 
---> 21 from pymc3.distributions import distribution, multivariate
     22 from pymc3.distributions.continuous import Flat, Normal, get_tau_sigma
     23 from pymc3.distributions.shape_utils import to_tuple

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/distributions/distribution.py in <module>
     43     to_tuple,
     44 )
---> 45 from pymc3.model import (
     46     ContextMeta,
     47     FreeRV,

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/model.py in <module>
     36 import pymc3 as pm
     37 
---> 38 from pymc3.blocking import ArrayOrdering, DictToArrayBijection
     39 from pymc3.exceptions import ImputationWarning
     40 from pymc3.theanof import floatX, generator, gradient, hessian, inputvars

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/blocking.py in <module>
     23 import numpy as np
     24 
---> 25 from pymc3.util import get_var_name
     26 
     27 __all__ = ["ArrayOrdering", "DictToArrayBijection", "DictToVarBijection"]

~/miniconda3/envs/py37/lib/python3.7/site-packages/pymc3/util.py in <module>
     19 from typing import Dict, List, Tuple, Union
     20 
---> 21 import arviz
     22 import dill
     23 import numpy as np

~/miniconda3/envs/py37/lib/python3.7/site-packages/arviz/__init__.py in <module>
     30 
     31 
---> 32 from .data import *
     33 from .plots import *
     34 from .plots.backends import *

~/miniconda3/envs/py37/lib/python3.7/site-packages/arviz/data/__init__.py in <module>
      1 """Code for loading and manipulating data structures."""
----> 2 from .base import CoordSpec, DimSpec, dict_to_dataset, numpy_to_data_array
      3 from .converters import convert_to_dataset, convert_to_inference_data
      4 from .datasets import clear_data_home, list_datasets, load_arviz_data
      5 from .inference_data import InferenceData, concat

~/miniconda3/envs/py37/lib/python3.7/site-packages/arviz/data/base.py in <module>
      9 import numpy as np
     10 import pkg_resources
---> 11 import xarray as xr
     12 
     13 try:

~/miniconda3/envs/py37/lib/python3.7/site-packages/xarray/__init__.py in <module>
----> 1 from . import testing, tutorial, ufuncs
      2 from .backends.api import (
      3     load_dataarray,
      4     load_dataset,
      5     open_dataarray,

~/miniconda3/envs/py37/lib/python3.7/site-packages/xarray/tutorial.py in <module>
     11 import numpy as np
     12 
---> 13 from .backends.api import open_dataset as _open_dataset
     14 from .backends.rasterio_ import open_rasterio as _open_rasterio
     15 from .core.dataarray import DataArray

~/miniconda3/envs/py37/lib/python3.7/site-packages/xarray/backends/__init__.py in <module>
      7 from .common import AbstractDataStore, BackendArray, BackendEntrypoint
      8 from .file_manager import CachingFileManager, DummyFileManager, FileManager
----> 9 from .h5netcdf_ import H5NetCDFStore
     10 from .memory import InMemoryDataStore
     11 from .netCDF4_ import NetCDF4DataStore

~/miniconda3/envs/py37/lib/python3.7/site-packages/xarray/backends/h5netcdf_.py in <module>
     23 from .file_manager import CachingFileManager, DummyFileManager
     24 from .locks import HDF5_LOCK, combine_locks, ensure_lock, get_write_lock
---> 25 from .netCDF4_ import (
     26     BaseNetCDF4Array,
     27     _encode_nc4_variable,

~/miniconda3/envs/py37/lib/python3.7/site-packages/xarray/backends/netCDF4_.py in <module>
     31 
     32 try:
---> 33     import netCDF4
     34 
     35     has_netcdf4 = True

~/miniconda3/envs/py37/lib/python3.7/site-packages/netCDF4/__init__.py in <module>
      1 # init for netCDF4. package
      2 # Docstring comes from extension module _netCDF4.
----> 3 from ._netCDF4 import *
      4 # Need explicit imports for names beginning with underscores
      5 from ._netCDF4 import __doc__

ImportError: /github/home/miniconda3/envs/py37/lib/python3.7/site-packages/netCDF4/../netCDF4.libs/libhdf5-3e8ef4e5.so.200.0.0: cannot read file data
ImportError: /github/home/miniconda3/envs/py37/lib/python3.7/site-packages/netCDF4/../netCDF4.libs/libhdf5-3e8ef4e5.so.200.0.0: cannot read file data
